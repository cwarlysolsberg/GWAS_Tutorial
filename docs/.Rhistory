?model.matrix()
?glm()
?glmnet()
library(glmnet)
install.packages("glmnet")
library(glmnet)
?glmnet()
##Goal: Learn how to use randomForest
library(glmnet)
library(caTools)
data<-mtcars
sapply(data,class)
View(data)
##Goal: Learn how to use randomForest
library(tidyverse)
library(glmnet)
library(caTools)
data<-mtcars
sapply(data,class)
data <- transform(
data,
cyl=as.factor(cyl),
am=as.factor(am),
gear=as.factor(gear),
carb=as.factor(carb)
)
data<-select(data,cyl,am,gear,carb,vs)
x<-data[c()]
y<-data$vs
# First step: using .*. for all interactions
f <- as.formula(vs ~ .)
# Second step: using model.matrix to take advantage of f
x <- model.matrix(f, data)[,-1]
colnames(x)
GLM<-glmnet(x, y, family = "binomial")
coef(GLM)
probabilitiesGLM <- predict(GLM,newx = x)
logit<-glm(y~x, family = "binomial")
coef(logit)
probabilitiesLog <- predict(GLM,newx = x)
summary(probabilitiesLog)
##Goal: Learn how to use randomForest
library(tidyverse)
library(glmnet)
library(caTools)
data<-mtcars
sapply(data,class)
data <- transform(
data,
cyl=as.factor(cyl),
am=as.factor(am),
gear=as.factor(gear),
carb=as.factor(carb)
)
data<-select(data,cyl,am,gear,carb,vs)
x<-data[c()]
y<-data$vs
# First step: using .*. for all interactions
f <- as.formula(vs ~ .)
# Second step: using model.matrix to take advantage of f
x <- model.matrix(f, data)[,-1]
colnames(x)
GLM<-glmnet(x, y, family = "binomial")
coef(GLM)
probabilitiesGLM <- predict(GLM,newx = x)
logit<-glm(y~x, family = "binomial")
coef(logit)
probabilitiesLog <- predict(logit,newx = x)
summary(probabilitiesLog)
summary(probabilitieGLM)
summary(probabilitiesGLM)
summary(probabilitiesGLM[,-1])
summary(probabilitiesGLM[,1])
summary(probabilitiesGLM[,99])
summary(probabilitiesGLM[,100])
cor(probabilitiesGLM[,100],probabilitiesLog)
?predict()
?predict.glm()
View(logit)
head(probabilitiesLog)
probabilitiesLog <- predict(logit,newx = x,type="response")
summary(probabilitiesLog)
probabilitiesGLM <- predict(GLM,newx = x,type="response")
summary(probabilitiesGLM)
head(probabilitiesGLM)
head(probabilitiesLog)
head(probabilitiesGLM[,100])
View(logit)
?glmnet()
sessionInfo()
##Goal: Learn how to use randomForest
library(tidyverse)
library(glmnet)
library(caTools)
data<-mtcars
sapply(data,class)
data <- transform(
data,
cyl=as.factor(cyl),
am=as.factor(am),
gear=as.factor(gear),
carb=as.factor(carb)
)
data<-select(data,cyl,am,gear,carb,vs)
x<-data[c()]
y<-data$vs
# First step: using .*. for all interactions
f <- as.formula(vs ~ .)
# Second step: using model.matrix to take advantage of f
x <- model.matrix(f, data)[,-1]
colnames(x)
GLM<-glmnet(x, y, family = binomial(link="probit"))
View(GLM)
